[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = ["{{cookiecutter.author}} <f{{cookiecutter.email}}>"]
readme = "README.md"
packages = [{ include = "{{cookiecutter.project_slug}}" }]

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"

[tool.poetry.group.dev.dependencies]
ruff = "0.1.8"
pytest = "^7.2.0"
pytest-cookies = "^0.6.1"
{% if cookiecutter.codecov == 'y' -%}
pytest-cov = "^4.0.0"
{% endif -%}
deptry = "^0.12.0"
{% if cookiecutter.mypy == 'y' -%}
mypy = "^1.5.1"
{% endif -%}
pre-commit = "^3.4.0"
tox = "^4.11.1"
vulture = "^2.11"
ipykernel = "^6.29.3"
ipywidgets = "^8.1.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

{% if cookiecutter.mypy == 'y' -%}
[tool.mypy]
files = ["{{cookiecutter.project_slug}}", "tests"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true
{% endif %}

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py38"
exclude = ["vulture_whitelist.py"]
line-length = 100
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_slug}}"]
{% endif%}

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.vulture]
paths = ["{{cookiecutter.project_slug}}", "vulture_whitelist.py"]
sort_by_size = true
